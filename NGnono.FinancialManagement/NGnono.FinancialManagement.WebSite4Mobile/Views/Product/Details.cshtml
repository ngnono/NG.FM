@using NGnono.FinancialManagement.WebSiteCore.Models.Vo
@model NGnono.FinancialManagement.Data.Models.ProductEntity
@{
    ViewBag.Title = this.Model.Name.Substring(0, this.Model.Name.Length > 10 ? 10 : this.Model.Name.Length);
}

@section Header {
    @Html.Partial("_StdHeaderPartial", new StdHeaderViewModel
{
    Title = ViewBag.Title
})
}


<ul data-role="listview">
    <li data-role="list-divider">@this.Model.Name</li>
    <li>@this.Model.Description</li>
    <li>￥@this.Model.Price</li>
    <li data-role="list-divider">品牌</li>
    <li>@this.Model.Brand.Name</li>
    <li data-role="list-divider">分类</li>
    <li>@this.Model.Tag.Name</li>
    <li data-role="list-divider">商家信息</li>
    <li><a href="#storePage">@this.Model.Store.Name</a></li>
    <li><a href="tel:@this.Model.Store.Tel">@this.Model.Store.Tel</a></li>
</ul>

@section PageAreas
{
    <div data-role="page" id="storePage">
        <div data-role="header">
            @Html.ActionLink("返回", "Index", "Home", null, new { data_icon = "arrow-l", data_rel = "back" })
            <h1>@this.Model.Store.Name.Substring(0, this.Model.Store.Name.Length > 10 ? 10 : this.Model.Store.Name.Length);
            </h1>
        </div>
        <div data-role="content" id="storeContent">
            <ul data-role="listview" >
                <li>@this.Model.Store.Name</li>
                <li><a href="#storeDetailsPage">
                    <div id="allmap" style="width: 100%; height: 320px"></div>
                </a></li>
                <li>@this.Model.Store.Location</li>
                <li><a href="tel:@this.Model.Store.Tel">@this.Model.Store.Tel</a></li>
                <li>@this.Model.Store.Description</li>
            </ul>
        </div>
    </div>

    <div data-role="page" id="storeDetailsPage">
        <div data-role="header">
            @Html.ActionLink("返回", "Index", "Home", null, new { data_icon = "arrow-l", data_rel = "back" })
            <h1>@this.Model.Store.Name.Substring(0, this.Model.Store.Name.Length > 10 ? 10 : this.Model.Store.Name.Length)
            </h1>
        </div>
        <div data-role="content" id="storeDetailsContent">
            <ul data-role="listview" >
                <li>
                    <div id="dmap" style="width: 100%; height: 320px"></div>
                </li>
                <li>
                    <fieldset data-role="controlgroup" data-type="horizontal">

                        <input type="radio" name="type1" id="chb_mode_2" value="2" checked="checked" onclick=" this.checked = true; sdinit()" />
                        <label for="chb_mode_2">驾车</label>
                        <input type="radio" name="type1" id="chb_mode_1" value="1" onclick="this.checked = true;sdinit()"  />
                        <label for="chb_mode_1">公交</label>


                    </fieldset>
                </li>
                <li>
                    <div id="r-result"></div>
                </li>
            </ul>
        </div>
    </div>
}

@section HeaderScripts
{
    <script type="text/javascript" src="http://api.map.baidu.com/api?v=1.5&ak=50bebc60934e9a21caaacc8e24a2bec3"></script>
}

@section FooterScripts
{
    <script type="text/javascript">

        $('#storePage').on("pageinit", sinit);

        function sinit() {
            var map = new BMap.Map("allmap");
            // 创建Map实例
            var point = new BMap.Point(@this.Model.Store.Longitude, @this.Model.Store.Latitude);
            // 创建点坐标
            map.centerAndZoom(point, 15);

            addOverlay(map, point.lng, point.lat, null);

            //var mk = new BMap.Marker(point);
            ////map = new BMap.Map("l-map");
            //map.addOverlay(mk);
            //map.panTo(point);

            //// 初始化地图,设置中心点坐标和地图级别。
            //map.enableScrollWheelZoom();
            //启用滚轮放大缩小
        }

        $('#storeDetailsPage').on("pageinit", sdinit);

        function sdinit() {
            var map = new BMap.Map("dmap"); // 创建Map实例
            var point = new BMap.Point(@this.Model.Store.Longitude, @this.Model.Store.Latitude); // 创建点坐标
            map.centerAndZoom(point, 15); // 初始化地图,设置中心点坐标和地图级别。
            map.enableScrollWheelZoom();

            getGeo(map);
            
        }

        function daohang(map, pc, pe) {
            var val = $('input:radio[name="type1"]:checked').val();
            if (val == null) {
                alert("请选择出行方式驾车or公交");
                return false;
            }

            if (val == 2) {
                jiache(map, pc, pe);
            } else {
                gongjiao(map, pc, pe);

            }
        }

        function jiache(map,p1,p2) {
            var transit = new BMap.DrivingRoute(map, { renderOptions: { map: map, autoViewport: true, panel: "r-result" } });
            transit.search(p1, p2);
        }

        function gongjiao(map,p1,p2) {
            var transit = new BMap.TransitRoute(map, {
                renderOptions: { map: map, panel: "r-result" }
            });
            transit.search(p1, p2);
        }

        function addOverlay(map, lng, lat, currentGeo) {
            var p = new BMap.Point(lng, lat);
            var marker = new BMap.Marker(p); // 创建标注
            map.addOverlay(marker); // 将标注添加到地图中
            map.panTo(p);
            if (currentGeo != null) {
                marker.setAnimation(BMAP_ANIMATION_BOUNCE); //跳动的动画
                //创建信息窗口
                //创建信息窗口
                var infoWindow1 = new BMap.InfoWindow("您的位置");
                marker.addEventListener("click", function() { this.openInfoWindow(infoWindow1); });
            }
        }

        function getGeo(map) {


            var p2 = new BMap.Point(@this.Model.Store.Longitude, @this.Model.Store.Latitude);

            var geo = '';
            var geolocation = new BMap.Geolocation();
            geolocation.getCurrentPosition(function(r) {
                if (this.getStatus() == BMAP_STATUS_SUCCESS) {
                    //var mk = new BMap.Marker(r.point);
                    //map.addOverlay(mk);
                    //map.panTo(r.point);
                    addOverlay(map, r.point.lng, r.point.lat, 'current');
                    //geo = r.point.lng + ',' + r.point.lat;

                    var p1 = new BMap.Point(r.point.lng, r.point.lat);

                    daohang(map, p1, p2);
                } else {
                    alert('failed' + this.getStatus());
                }
            }, { enableHighAccuracy: true });

            return geo;
            //关于状态码
            //BMAP_STATUS_SUCCESS	检索成功。对应数值“0”。
            //BMAP_STATUS_CITY_LIST	城市列表。对应数值“1”。
            //BMAP_STATUS_UNKNOWN_LOCATION	位置结果未知。对应数值“2”。
            //BMAP_STATUS_UNKNOWN_ROUTE	导航结果未知。对应数值“3”。
            //BMAP_STATUS_INVALID_KEY	非法密钥。对应数值“4”。
            //BMAP_STATUS_INVALID_REQUEST	非法请求。对应数值“5”。
            //BMAP_STATUS_PERMISSION_DENIED	没有权限。对应数值“6”。(自 1.1 新增)
            //BMAP_STATUS_SERVICE_UNAVAILABLE	服务不可用。对应数值“7”。(自 1.1 新增)
            //BMAP_STATUS_TIMEOUT	超时。对应数值“8”。(自 1.1 新增)

        }


        function cGetGeo() {
            var map = new BMap.Map("dmap"); // 创建Map实例
            var point = new BMap.Point(@this.Model.Store.Longitude, @this.Model.Store.Latitude); // 创建点坐标
            map.centerAndZoom(point, 15); // 初始化地图,设置中心点坐标和地图级别。
            map.enableScrollWheelZoom();

            map.addEventListener("click", showInfo);
        }

        function showInfo(e) {
            alert(e.point.lng + ", " + e.point.lat);
        }
    </script>

}
