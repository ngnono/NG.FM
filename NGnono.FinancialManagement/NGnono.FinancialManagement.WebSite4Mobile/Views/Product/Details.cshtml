@using NGnono.FinancialManagement.WebSiteCore.Models.Vo
@model NGnono.FinancialManagement.Data.Models.ProductEntity
@{
    ViewBag.Title = this.Model.Name.Substring(0, this.Model.Name.Length > 10 ? 10 : this.Model.Name.Length);
}

@section Header {
    @Html.Partial("_StdHeaderPartial", new StdHeaderViewModel
{
    Title = ViewBag.Title
})
}


<div data-role="collapsible" data-collapsed="true" data-theme="c">
    <ul data-role="listview" data-inset="true">
        <li>@this.Model.Name</li>
        <li>
            <div data-role="collapsible" data-collapsed="true">
                @this.Model.Description
            </div>
        </li>

        <li>
            <div data-role="collapsible" data-collapsed="true">
                <h3>品牌</h3>
                @this.Model.Brand.Name
            </div>
        </li>
        <li>
            <div data-role="collapsible" data-collapsed="true">
                <h3>商家信息</h3>
                <a href="#storePage">商家： @this.Model.Store.Name</a>
                电话： <a href="tel:@this.Model.Store.Tel">@this.Model.Store.Tel</a>
            </div>
        </li>
    </ul>

</div>

@section PageAreas
{
    <div data-role="page" id="storePage">
        <div data-role="header">
            @Html.ActionLink("返回", "Index", "Home", null, new { data_icon = "arrow-l", data_rel = "back" })
            <h1>@this.Model.Store.Name.Substring(0, this.Model.Store.Name.Length > 10 ? 10 : this.Model.Store.Name.Length);</li>
            </h1>
        </div>
        <div data-role="content" id="storeContent">
            <ul data-role="listview" data-filter="true">
                <li>@this.Model.Store.Name</li>
                <li><a href="#storeDetailsPage">
                    <div id="allmap"></div>
                </a></li>
                <li>@this.Model.Store.Location</li>
                <li><a href="tel:@this.Model.Store.Tel">@this.Model.Store.Tel</a></li>
                <li>@this.Model.Store.Description</li>
            </ul>
        </div>
    </div>

    <div data-role="page" id="storeDetailsPage">
        <div data-role="header">
            @Html.ActionLink("返回", "Index", "Home", null, new { data_icon = "arrow-l", data_rel = "back" })
            <h1>@this.Model.Store.Name.Substring(0, this.Model.Store.Name.Length > 10 ? 10 : this.Model.Store.Name.Length);</li>
            </h1>
        </div>
        <div data-role="content" id="storeContent">
            <ul data-role="listview" data-filter="true">
                <li>
                    <div id="dmap"></div>
                </li>
                <li>
                    <fieldset data-role="controlgroup" data-type="horizontal">

                        <input type="radio" name="type1" id="chb_mode_2" value="2" checked="checked" />
                        <label for="chb_mode_2">驾车</label>
                        <input type="radio" name="type1" id="chb_mode_1" value="1" />
                        <label for="chb_mode_1">公交</label>


                    </fieldset>
                </li>
                <li>
                    <div id="r-result"></div>
                </li>
            </ul>
        </div>
    </div>
}

@section HeaderScripts
{
    <script type="text/javascript" src="http://api.map.baidu.com/api?v=1.5&ak=50bebc60934e9a21caaacc8e24a2bec3"></script>
}

@section FooterScripts
{
    <script type="text/javascript">

        $('#storePage').on("pageinit", sinit);

        function sinit() {
            var map = new BMap.Map("allmap");
            // 创建Map实例
            var point = new BMap.Point(@this.Model.Store.Longitude, @this.Model.Store.Latitude);
            // 创建点坐标
            map.centerAndZoom(point, 15);
            // 初始化地图,设置中心点坐标和地图级别。
            map.enableScrollWheelZoom();
            //启用滚轮放大缩小
        }

        $('#storeDetailsPage').on("pageinit", sdinit);

        function sdinit() {
            var map = new BMap.Map("dmap"); // 创建Map实例
            var point = new BMap.Point(@this.Model.Store.Longitude, @this.Model.Store.Latitude); // 创建点坐标
            map.centerAndZoom(point, 15); // 初始化地图,设置中心点坐标和地图级别。
            map.enableScrollWheelZoom();

            var g = getGeo();
            if (g == '') {
                return;
            }

            var val = $('input:radio[name="type1"]:checked').val();
            if (val == null) {
                alert("请选择出行方式驾车or公交");
                return false;
            }

            var p1 = new BMap.Point(g.split(',')[0], g.split(',')[1]);
            var p2 = new BMap.Point(@this.Model.Store.Longitude, @this.Model.Store.Latitude);

            var transit;
            if (val == 2) {
                transit = new BMap.DrivingRoute(map, { renderOptions: { map: map, autoViewport: true, panel: "r-result" } });
            } else {
                transit = new BMap.TransitRoute(map, {
                    renderOptions: { map: map, panel: "r-result" }
                });
            }

            transit.search(p1, p2);
        }

        function getGeo() {
            var geo = '';
            var geolocation = new BMap.Geolocation();
            geolocation.getCurrentPosition(function(r) {
                if (this.getStatus() == BMAP_STATUS_SUCCESS) {
                    var mk = new BMap.Marker(r.point);
                    map.addOverlay(mk);
                    map.panTo(r.point);
                    geo = r.point.lng + ',' + r.point.lat;
                } else {
                    alert('failed' + this.getStatus());
                }
            }, { enableHighAccuracy: true });

            return geo;
            //关于状态码
            //BMAP_STATUS_SUCCESS	检索成功。对应数值“0”。
            //BMAP_STATUS_CITY_LIST	城市列表。对应数值“1”。
            //BMAP_STATUS_UNKNOWN_LOCATION	位置结果未知。对应数值“2”。
            //BMAP_STATUS_UNKNOWN_ROUTE	导航结果未知。对应数值“3”。
            //BMAP_STATUS_INVALID_KEY	非法密钥。对应数值“4”。
            //BMAP_STATUS_INVALID_REQUEST	非法请求。对应数值“5”。
            //BMAP_STATUS_PERMISSION_DENIED	没有权限。对应数值“6”。(自 1.1 新增)
            //BMAP_STATUS_SERVICE_UNAVAILABLE	服务不可用。对应数值“7”。(自 1.1 新增)
            //BMAP_STATUS_TIMEOUT	超时。对应数值“8”。(自 1.1 新增)

        }


        function cGetGeo() {
            var map = new BMap.Map("dmap"); // 创建Map实例
            var point = new BMap.Point(@this.Model.Store.Longitude, @this.Model.Store.Latitude); // 创建点坐标
            map.centerAndZoom(point, 15); // 初始化地图,设置中心点坐标和地图级别。
            map.enableScrollWheelZoom();

            map.addEventListener("click", showInfo);
        }
        
        function showInfo(e){
            alert(e.point.lng + ", " + e.point.lat);
        }
    </script>

}
